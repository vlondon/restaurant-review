.plain
  %h1= @event.name
  %address= @event.address
  .space
  %table{:class => 'topBar'}
    %tr
      - if @event.image_attached?
        %td{:width => '100px'}
          - image = @event.rand_image
          = image_tag(image.c_gallery_public_filename, :alt => 'Image')
      %td
        = render_restaurant_status(@event)
        - cellNum = @event.field 'phone'
        - if cellNum.present?
          .cellNum
            .grid_1.key.phone Call
            .grid_3.value= cellNum

        .clear
    %tr
      %td{:colspan => 2}
        .checkinBox.reviewButton
          %button{:onclick => "$('#reviewEditor').toggle('slide');"}
            Review This Event
          #reviewEditor{:style => 'display:none'}
            = render :partial => 'reviews/parts/review_editor', :locals => {:topic_event => @event}
    %tr
      %td{:colspan => 2}
        = render_checkin_box
    %tr
      %td{:colspan => 2}
        = render_recently_checkedin_users(2.hours)
  .clear

.box
  %h4= "#{@event.reviews.count} REVIEWS"
  .message Tap on each review to see detail review and comments
  = render :partial => 'reviews/parts/restaurant_review',
           :locals => {:restaurant => @event}

.box
  %h4 Map
  .message Tap on map to see nearby #{@topic.name.humanize.pluralize}
  %center
    = render_address_in_map(@event, :just_map => true)
  - if @event.description_fields.present?
    .properties
      - @event.description_fields.each do |field|
        - if field['value'].present?
          - if field['field_type'].to_i == 1
            .value= link_to(field['label'], field['value'])
            .clear
          - else
            .key= field['label']
            .value= auto_link h(field['value'])
            .clear


.box
  .content
    .fullRowUserInfo
      %table
        %tr
          %td= user_display_picture(@event.user)
          %td= "Added by #{user_link(@event.user)}"
      .clear

.box
  %h4{:toggleView => 'description'}
    Description
    %a{:class => 'expand', :toggleView => 'description'} &raquo;
  #description.content.text{:style => 'display: none;'}
    = sanitize(@event.description)

.box
  %h4{:toggleView => 'photos'}
    Photos
    %a{:class => 'expand', :toggleView => 'photos'} &raquo;
  #photos.content{:style => 'display: none'}
    .album
      - @event.all_images.each do |image|
        %a{:href => image_path(image.id)}
          = image_tag(image.c_small_public_filename)
          .countBubble
            = image.photo_comments.count
      .clear

