.plain

  - if @related_object
    %h1= link_to truncate(@related_object.name, 20), event_or_restaurant_url(@related_object)
  .space

  .imageContainer
    - if @image.caption.present?
      %h4= @image.caption
    %a{:href => @image.public_filename}
      = image_tag(@image.c_large_public_filename)
    - if @image.description.present?
      .description= @image.description

- if @image.user.present?
  .box
    .content
      .fullRowUserInfo
        %table
          %tr
            %td= user_display_picture(@image.user)
            %td= "Added by #{user_link(@image.user)}"
        .clear

- if @related_object.respond_to?(:image_attached?) && @related_object.image_attached? && @related_object.all_images.length > 0
  .box
    %h4{:toggleView => 'photos'}
      More pictures #{@related_object ? "from #{truncate(@related_object.name, 20)}" : ''}
      %a{:class => 'expand', :toggleView => 'photos'} &raquo;
    #photos.content{:style => 'display: none'}
      .album
        - @related_object.all_images.each do |image|
          - if image.id != @image.id
            = link_to("#{image_tag(image.c_small_public_filename)}<div class='countBubble'>#{image.photo_comments.count}</div>", image_path(image.id))
        .clear

.box
  %h4
    Comments
    %a.countBubble= @image.photo_comments.count
  .content
    - if logged_in?
      %input.long_button{:type => 'button', :toggleView => 'photoReviewForm', :value => 'Add your comment'}

      #photoReviewForm.review_form{:style => 'display:none'}
        - form_for PhotoComment.new do |f|
          %h6 Add your comment
          = f.text_area :content
          = f.hidden_field :image_id, :value => @image.id

          - if @related_object && @related_object.is_a?(Restaurant)
            = f.hidden_field :restaurant_id, :value => @related_object.id

          - elsif @related_object && @related_object.is_a?(TopicEvent)
            = f.hidden_field :topic_event_id, :value => @related_object.id

          .space
          = f.submit 'Save Comment'
          .space
          %input.long_button{:type => 'button', :toggleView => 'photoReviewForm', :value => 'Close'}
    - else
      You need to #{link_to t('nav.login'), login_url} to post your comment
    .clear

    .reviews
      - if @image.photo_comments.present?
        - @image.photo_comments.each do |comment|
          %table.tbl_reviews
            %tr
              %td.avatar{:valign => "top"}
                = link_to(image_tag(comment.user.display_picture, :height => '40px', :alt => 'n/a'), user_long_url(comment.user),
                            :title => "#{comment.user.login}")
              %td{:valign => 'top'}
                %span.reviewContent
                  = simple_format("#{link_to comment.user.login, user_long_url(comment.user)} #{auto_link(h(comment.content))}<div class='date'>#{distance_of_time_in_words(Time.now, comment.created_at)} #{t('label.ago')}</div>")

            - if @image.author?(current_user)
              %tr
                %td{:colspan => 2}
                  = link_to t('label.delete_comment'), photo_comment_url(:id => comment.id), :class => 'date', :method => :delete, :confirm => t('confirm.delete_comment')
      .clear